<acceptance-test-run title="Checking hourly OTR for the beginning of a trip" name="Checking hourly OTR for the beginning of a trip" steps="35" successful="33" failures="1" skipped="1" ignored="0" pending="0" result="FAILURE" duration="11323">
  <user-story id="OTRByTimePeriod" name="O t r by time period" path="au/gov/nsw/transport/odm/stories/schedule_statistics/OTRByTimePeriod.story"/>
  <tags>
    <tag name="O t r by time period" type="story"/>
  </tags>
  <examples>
    <headers>
      <header>month</header>
      <header>data_domain</header>
      <header>contract</header>
      <header>hour</header>
      <header>scheduled</header>
      <header>untracked</header>
      <header>departed</header>
      <header>gt30min</header>
      <header>base</header>
      <header>late</header>
      <header>early</header>
      <header>ontime</header>
      <header>ontimepct</header>
      <header>latepct</header>
      <header>earlypct</header>
    </headers>
    <rows>
      <row result="SUCCESS">
        <value>Jan-13</value>
        <value>8896</value>
        <value>1</value>
        <value>0</value>
        <value>56</value>
        <value>43</value>
        <value>13</value>
        <value>0</value>
        <value>13</value>
        <value>1</value>
        <value>0</value>
        <value>12</value>
        <value>92.31%</value>
        <value>7.69%</value>
        <value>0.00%</value>
      </row>
      <row result="SUCCESS">
        <value>Jan-13</value>
        <value>8896</value>
        <value>1</value>
        <value>3</value>
        <value>42</value>
        <value>16</value>
        <value>26</value>
        <value>0</value>
        <value>26</value>
        <value>0</value>
        <value>0</value>
        <value>26</value>
        <value>100.00%</value>
        <value>0.00%</value>
        <value>0.00%</value>
      </row>
      <row result="SUCCESS">
        <value>Jan-13</value>
        <value>8896</value>
        <value>1</value>
        <value>4</value>
        <value>361</value>
        <value>131</value>
        <value>230</value>
        <value>0</value>
        <value>230</value>
        <value>5</value>
        <value>1</value>
        <value>224</value>
        <value>97.39%</value>
        <value>2.17%</value>
        <value>0.43%</value>
      </row>
      <row result="SUCCESS">
        <value>Jan-13</value>
        <value>8896</value>
        <value>1</value>
        <value>5</value>
        <value>1359</value>
        <value>446</value>
        <value>913</value>
        <value>0</value>
        <value>913</value>
        <value>36</value>
        <value>11</value>
        <value>866</value>
        <value>94.85%</value>
        <value>3.94%</value>
        <value>1.20%</value>
      </row>
      <row result="SUCCESS">
        <value>Jan-13</value>
        <value>8896</value>
        <value>1</value>
        <value>6</value>
        <value>2215</value>
        <value>734</value>
        <value>1481</value>
        <value>2</value>
        <value>1479</value>
        <value>60</value>
        <value>15</value>
        <value>1404</value>
        <value>94.93%</value>
        <value>4.06%</value>
        <value>1.01%</value>
      </row>
      <row result="SUCCESS">
        <value>Jan-13</value>
        <value>8896</value>
        <value>1</value>
        <value>7</value>
        <value>2383</value>
        <value>805</value>
        <value>1578</value>
        <value>2</value>
        <value>1576</value>
        <value>42</value>
        <value>18</value>
        <value>1516</value>
        <value>96.19%</value>
        <value>2.66%</value>
        <value>1.14%</value>
      </row>
      <row result="FAILURE">
        <value>Jan-13</value>
        <value>8896</value>
        <value>1</value>
        <value>8</value>
        <value>2277</value>
        <value>731</value>
        <value>1546</value>
        <value>0</value>
        <value>1546</value>
        <value>64</value>
        <value>26</value>
        <value>1456</value>
        <value>94.18%</value>
        <value>4.14%</value>
        <value>1.68%</value>
      </row>
    </rows>
  </examples>
  <test-group name="[1] {month=Jan-13, data_domain=8896, contract=1, hour=0, scheduled=56, untracked=43, departed=13, gt30min=0, base=13, late=1, early=0, ontime=12, ontimepct=92.31%, latepct=7.69%, earlypct=0.00%}" result="SUCCESS">
    <test-step result="SUCCESS" duration="0">
      <description>Given the month is {Jan-13} and contract is {1} and the operator&apos;s domain is {8896}</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And the hour is {0}</description>
    </test-step>
    <test-step result="SUCCESS" duration="1577">
      <description>When we check the hourly OTR</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>Then there should be {0} early trips, {1} late trips and {12} trips on time</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And as a percentage there should be {0.00%} early trips, {7.69%} late trips and {92.31%} trips on time</description>
    </test-step>
  </test-group>
  <test-group name="[2] {month=Jan-13, data_domain=8896, contract=1, hour=3, scheduled=42, untracked=16, departed=26, gt30min=0, base=26, late=0, early=0, ontime=26, ontimepct=100.00%, latepct=0.00%, earlypct=0.00%}" result="SUCCESS">
    <test-step result="SUCCESS" duration="0">
      <description>Given the month is {Jan-13} and contract is {1} and the operator&apos;s domain is {8896}</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And the hour is {3}</description>
    </test-step>
    <test-step result="SUCCESS" duration="1546">
      <description>When we check the hourly OTR</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>Then there should be {0} early trips, {0} late trips and {26} trips on time</description>
    </test-step>
    <test-step result="SUCCESS" duration="16">
      <description>And as a percentage there should be {0.00%} early trips, {0.00%} late trips and {100.00%} trips on time</description>
    </test-step>
  </test-group>
  <test-group name="[3] {month=Jan-13, data_domain=8896, contract=1, hour=4, scheduled=361, untracked=131, departed=230, gt30min=0, base=230, late=5, early=1, ontime=224, ontimepct=97.39%, latepct=2.17%, earlypct=0.43%}" result="SUCCESS">
    <test-step result="SUCCESS" duration="0">
      <description>Given the month is {Jan-13} and contract is {1} and the operator&apos;s domain is {8896}</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And the hour is {4}</description>
    </test-step>
    <test-step result="SUCCESS" duration="1624">
      <description>When we check the hourly OTR</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>Then there should be {1} early trips, {5} late trips and {224} trips on time</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And as a percentage there should be {0.43%} early trips, {2.17%} late trips and {97.39%} trips on time</description>
    </test-step>
  </test-group>
  <test-group name="[4] {month=Jan-13, data_domain=8896, contract=1, hour=5, scheduled=1359, untracked=446, departed=913, gt30min=0, base=913, late=36, early=11, ontime=866, ontimepct=94.85%, latepct=3.94%, earlypct=1.20%}" result="SUCCESS">
    <test-step result="SUCCESS" duration="0">
      <description>Given the month is {Jan-13} and contract is {1} and the operator&apos;s domain is {8896}</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And the hour is {5}</description>
    </test-step>
    <test-step result="SUCCESS" duration="1562">
      <description>When we check the hourly OTR</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>Then there should be {11} early trips, {36} late trips and {866} trips on time</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And as a percentage there should be {1.20%} early trips, {3.94%} late trips and {94.85%} trips on time</description>
    </test-step>
  </test-group>
  <test-group name="[5] {month=Jan-13, data_domain=8896, contract=1, hour=6, scheduled=2215, untracked=734, departed=1481, gt30min=2, base=1479, late=60, early=15, ontime=1404, ontimepct=94.93%, latepct=4.06%, earlypct=1.01%}" result="SUCCESS">
    <test-step result="SUCCESS" duration="0">
      <description>Given the month is {Jan-13} and contract is {1} and the operator&apos;s domain is {8896}</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And the hour is {6}</description>
    </test-step>
    <test-step result="SUCCESS" duration="1578">
      <description>When we check the hourly OTR</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>Then there should be {15} early trips, {60} late trips and {1404} trips on time</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And as a percentage there should be {1.01%} early trips, {4.06%} late trips and {94.93%} trips on time</description>
    </test-step>
  </test-group>
  <test-group name="[6] {month=Jan-13, data_domain=8896, contract=1, hour=7, scheduled=2383, untracked=805, departed=1578, gt30min=2, base=1576, late=42, early=18, ontime=1516, ontimepct=96.19%, latepct=2.66%, earlypct=1.14%}" result="SUCCESS">
    <test-step result="SUCCESS" duration="0">
      <description>Given the month is {Jan-13} and contract is {1} and the operator&apos;s domain is {8896}</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And the hour is {7}</description>
    </test-step>
    <test-step result="SUCCESS" duration="1624">
      <description>When we check the hourly OTR</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>Then there should be {18} early trips, {42} late trips and {1516} trips on time</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And as a percentage there should be {1.14%} early trips, {2.66%} late trips and {96.19%} trips on time</description>
    </test-step>
  </test-group>
  <test-group name="[7] {month=Jan-13, data_domain=8896, contract=1, hour=8, scheduled=2277, untracked=731, departed=1546, gt30min=0, base=1546, late=64, early=26, ontime=1456, ontimepct=94.18%, latepct=4.14%, earlypct=1.68%}" result="FAILURE">
    <test-step result="SUCCESS" duration="0">
      <description>Given the month is {Jan-13} and contract is {1} and the operator&apos;s domain is {8896}</description>
    </test-step>
    <test-step result="SUCCESS" duration="0">
      <description>And the hour is {8}</description>
    </test-step>
    <test-step result="SUCCESS" duration="1686">
      <description>When we check the hourly OTR</description>
    </test-step>
    <test-step result="FAILURE" duration="0">
      <description>Then there should be ?26? early trips, ?64? late trips and ?1456? trips on time</description>
      <error>expected:&lt;145[6]&gt; but was:&lt;145[0]&gt;</error>
      <exception>net.thucydides.core.steps.StepFailureException: expected:&lt;145[6]&gt; but was:&lt;145[0]&gt;&#xd;
	at net.thucydides.core.steps.BaseStepListener.recordFailureDetailsInFailingTestStep(BaseStepListener.java:438)&#xd;
	at net.thucydides.core.steps.BaseStepListener.stepFailed(BaseStepListener.java:426)&#xd;
	at net.thucydides.core.steps.StepEventBus.stepFailed(StepEventBus.java:293)&#xd;
	at net.thucydides.jbehave.ThucydidesReporter.failed(ThucydidesReporter.java:509)&#xd;
	at org.jbehave.core.reporters.DelegatingStoryReporter.failed(DelegatingStoryReporter.java:97)&#xd;
	at org.jbehave.core.reporters.ConcurrentStoryReporter.failed(ConcurrentStoryReporter.java:260)&#xd;
	at org.jbehave.core.steps.AbstractStepResult$Failed.describeTo(AbstractStepResult.java:57)&#xd;
	at org.jbehave.core.embedder.StoryRunner$FineSoFar.run(StoryRunner.java:500)&#xd;
	at org.jbehave.core.embedder.StoryRunner.runStepsWhileKeepingState(StoryRunner.java:479)&#xd;
	at org.jbehave.core.embedder.StoryRunner.runScenarioSteps(StoryRunner.java:443)&#xd;
	at org.jbehave.core.embedder.StoryRunner.runScenariosParametrisedByExamples(StoryRunner.java:412)&#xd;
	at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:301)&#xd;
	at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:219)&#xd;
	at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:180)&#xd;
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:229)&#xd;
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201)&#xd;
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)&#xd;
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)&#xd;
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)&#xd;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)&#xd;
	at java.lang.Thread.run(Thread.java:662)&#xd;
Caused by: org.junit.ComparisonFailure: expected:&lt;145[6]&gt; but was:&lt;145[0]&gt;&#xd;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#xd;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)&#xd;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)&#xd;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)&#xd;
	at org.fest.assertions.ConstructorInvoker.newInstance(ConstructorInvoker.java:36)&#xd;
	at org.fest.assertions.ComparisonFailureFactory.newComparisonFailure(ComparisonFailureFactory.java:60)&#xd;
	at org.fest.assertions.ComparisonFailureFactory.comparisonFailure(ComparisonFailureFactory.java:46)&#xd;
	at org.fest.assertions.Fail.comparisonFailed(Fail.java:83)&#xd;
	at org.fest.assertions.Fail.failIfNotEqual(Fail.java:71)&#xd;
	at org.fest.assertions.GenericAssert.isEqualTo(GenericAssert.java:217)&#xd;
	at au.gov.nsw.transport.odm.jbehave.OTRByTimePeriodSteps.checkTrips(OTRByTimePeriodSteps.java:69)&#xd;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xd;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&#xd;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&#xd;
	at java.lang.reflect.Method.invoke(Method.java:597)&#xd;
	at org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:550)&#xd;
	at org.jbehave.core.embedder.StoryRunner$FineSoFar.run(StoryRunner.java:499)&#xd;
	... 13 more&#xd;
</exception>
    </test-step>
    <test-step result="SKIPPED" duration="0">
      <description>And as a percentage there should be {1.68%} early trips, {4.14%} late trips and {94.18%} trips on time</description>
    </test-step>
  </test-group>
</acceptance-test-run>